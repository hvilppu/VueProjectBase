{
  "swagger": "2.0",
  "info": {
    "title": "project API",
    "version": "v1"
  },
  "paths": {
    "/api/Authentication/ChangeCompany": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get log in information",
        "description": "GET /api/Authentication/ChangeCompany/{id}",
        "operationId": "Api_ChangeCompany",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return logged user information",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Authentication/HeartBeat": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out",
        "description": "GET /api/Authentication/HeartBeat",
        "operationId": "Api_HeartBeat",
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Authentication/LogIn": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Get log in information",
        "description": "GET /api/Authentication/LogIn/{username}{password}",
        "operationId": "Api_LogIn",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "username",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "password",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Return logged user information",
            "schema": {
              "$ref": "#/definitions/UserViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Authentication/LogOut": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out",
        "description": "GET /api/Authentication/LogOut",
        "operationId": "Api_LogOut",
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/CheckpointArea/CreateNew": {
      "get": {
        "tags": [
          "CheckpointArea"
        ],
        "summary": "Create new checkpoint area and return it",
        "description": "GET /api/CheckpointArea/CreateNew",
        "operationId": "Api_CreateNew",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "type": "string"
          },
          {
            "in": "query",
            "name": "facilityId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Return checkpoint area",
            "schema": {
              "$ref": "#/definitions/CheckpointAreaDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/CheckpointArea/GetCheckpointAreas": {
      "get": {
        "tags": [
          "CheckpointArea"
        ],
        "summary": "Return all checkpoint areas where current user have rights",
        "description": "GET /api/CheckpointArea/GetCheckpointAreas",
        "operationId": "Api_GetCheckpointAreas",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Return checkpoint areas list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckpointAreaDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/CheckpointArea/RemoveById": {
      "get": {
        "tags": [
          "CheckpointArea"
        ],
        "summary": "Remove checkpointarea by id",
        "description": "GET /api/Checkpoint/RemoveById/{id}",
        "operationId": "Api_RemoveById",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/CheckpointArea/SaveCheckpointAreas": {
      "post": {
        "tags": [
          "CheckpointArea"
        ],
        "summary": "Save checkpoint areas and return all checkpoint areas where current user have rights",
        "description": "POST /api/CheckpointArea/SaveCheckpointAreas/{checkpointAreas}",
        "operationId": "Api_SaveCheckpointAreas",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckpointAreaDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return checkpoint areas list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CheckpointAreaDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/GetLayoutImage": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get image (as FileStreamResult) by id and sourcetype",
        "description": "GET /api/Document/GetLayoutImage/{id}{sourcetype}",
        "operationId": "Api_GetLayoutImage",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "sourcetype",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "image as FileStreamResult"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/GetTechnicalEquipmentDocument": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Get document (as FileStreamResult) by id and sourcetype",
        "description": "GET /api/Document/GetTechnicalEquipmentDocument/{id}{sourcetype}",
        "operationId": "Api_GetTechnicalEquipmentDocument",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "image as FileStreamResult"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/ImportPoolsFromExcelFile": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Import pools from Excel file, file at Request.Form.Files[0]",
        "description": "POST /api/Document/ImportPoolsFromExcelFile",
        "operationId": "Api_ImportPoolsFromExcelFile",
        "responses": {
          "200": {
            "description": ""
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/ImportTestDataFromExcelFile": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Import pools from Excel file, file at Request.Form.Files[0]",
        "description": "POST /api/Document/ImportPoolsFromExcelFile",
        "operationId": "Api_ImportTestDataFromExcelFile",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/UploadLayoutImage": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload layout image and return id for document, image is at Request.Form.Files[0]",
        "description": "POST /api/Document/UploadLayoutImage}",
        "operationId": "Api_UploadLayoutImage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Return id for document",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Document/UploadTechnicalEquipmentDocument": {
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Upload document to technical equipment",
        "description": "POST /api/Document/UploadLayoutImage}",
        "operationId": "Api_UploadTechnicalEquipmentDocument",
        "responses": {
          "200": {
            "description": "Return id for document"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Feeding/AddFeederUsageTodayToPool": {
      "get": {
        "tags": [
          "Feeding"
        ],
        "operationId": "Api_AddFeederUsageTodayToPool",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "feedAmountToAdd",
            "type": "number",
            "format": "float"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Feeding/GetFeedingsByPoolId": {
      "get": {
        "tags": [
          "Feeding"
        ],
        "operationId": "Api_GetFeedingsByPoolId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedingDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Feeding/GetFeedingsByPoolIdDayWithRange": {
      "get": {
        "tags": [
          "Feeding"
        ],
        "operationId": "Api_GetFeedingsByPoolIdDayWithRange",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "dayRange",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedingDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Feeding/RemoveFeedingById": {
      "get": {
        "tags": [
          "Feeding"
        ],
        "operationId": "Api_RemoveFeedingById",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Feeding/SaveFeeding": {
      "post": {
        "tags": [
          "Feeding"
        ],
        "operationId": "Api_SaveFeeding",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/FeedingDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeedingDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/ChangeFeedAmountToFeedStorageSlot": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_ChangeFeedAmountToFeedStorageSlot",
        "parameters": [
          {
            "in": "query",
            "name": "feedStorageSlotId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "amount",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/CreateNote": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_CreateNote",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/NoteDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/CreateNewOverViewItem": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_CreateNewOverViewItem",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "newItemType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "newItemName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "parentId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "locationCreatesCheckPoints",
            "description": "",
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "culture",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OverViewItemDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/DeleteFacility": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_DeleteFacility",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "facilityId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/DeleteFeedStorage": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_DeleteFeedStorage",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "feedStorageId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/DeleteLocation": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_DeleteLocation",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "locationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/DeleteOutletWater": {
      "delete": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_DeleteOutletWater",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetAlerts": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetAlerts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "culture",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AlertsViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/HaveAlerts": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_HaveAlerts",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "culture",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetCompanyUsers": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetCompanyUsers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFacilitys": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "Return all facilitys where current user have rights",
        "description": "GET /api/project/GetFacilitys",
        "operationId": "Api_GetFacilitys",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Return facilitys list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacilityDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFeeds": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFeeds",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFeedTypes": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFeedTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFishSchools": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFishSchools",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FishSchoolDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFishSpecies": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFishSpecies",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FishSpecieDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetLocationById": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetLocationById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LocationDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFeedStorageById": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFeedStorageById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeedStorageDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFeedStorageByLocationId": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFeedStorageByLocationId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "locationId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeedStorageDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetFeedStorageSpaces": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetFeedStorageSpaces",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "feedStorageId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedStorageSpaceDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetLocations": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetLocations",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetLocationTreeViewItems": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetLocationTreeViewItems",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DataTreeViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetNotesByFacilityId": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetNotesByFacilityId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "facilityId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NoteDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetOutletWaterById": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetOutletWaterById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OutletWaterDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetOutletWaters": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetOutletWaters",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutletWaterDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetOverViewItems": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetOverViewItems",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "forStr",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverViewItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/GetSlaughterings": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_GetSlaughterings",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SlaughteringsDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/ReceiptNote": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_ReceiptNote",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFacilitys": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFacilitys",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacilityDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FacilityDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFeedStorage": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFeedStorage",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeedStorageDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeedStorageDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFeeds": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFeeds",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFeedTypes": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFeedTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedTypeDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFeedStorageSpaces": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFeedStorageSpaces",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeedStorageSpaceDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFishSchools": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFishSchools",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FishSchoolDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveFishSpecies": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveFishSpecies",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/FishSpecieDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveLocation": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveLocation",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/LocationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LocationDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveLocations": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveLocations",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LocationDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveOutletWater": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveOutletWater",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/OutletWaterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OutletWaterDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveSlaughterings": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveSlaughterings",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SlaughteringsDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SaveUsers": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SaveUsers",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/SetNewPassword": {
      "get": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_SetNewPassword",
        "parameters": [
          {
            "in": "query",
            "name": "newPassword",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/project/UpdateOverViewItems": {
      "post": {
        "tags": [
          "project"
        ],
        "summary": "",
        "operationId": "Api_UpdateOverViewItems",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "forStr",
            "description": "",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverViewItemDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverViewItemDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/FishTransfer/GetFishTransfers": {
      "get": {
        "tags": [
          "FishTransfer"
        ],
        "summary": "Get fish transfers",
        "operationId": "Api_GetFishTransfers",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "poolId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FishTransferDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/FishTransfer/MakeFishTransfer": {
      "get": {
        "tags": [
          "FishTransfer"
        ],
        "summary": "Make fish transfer",
        "operationId": "Api_MakeFishTransfer",
        "parameters": [
          {
            "in": "query",
            "name": "poolFromId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "poolToId",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "amount",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "transferType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "fromName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "toName",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "removeFromPools",
            "description": "",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/CreateNewMeasure": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Create new measure",
        "operationId": "Api_CreateNewMeasure",
        "parameters": [
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "measureType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "value",
            "description": "",
            "type": "number",
            "format": "double"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "culture",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/CreateNewMeasures": {
      "post": {
        "tags": [
          "Measure"
        ],
        "summary": "Create new measures",
        "operationId": "Api_CreateNewMeasures",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MeasuresViewModel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetFlowMeasuresSummary": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get flow measures summary",
        "operationId": "Api_GetFlowMeasuresSummary",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FlowMeasuresDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetLatestMeasures": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "",
        "operationId": "Api_GetLatestMeasures",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "inType",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetLatestMeasuresForGroup": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "",
        "operationId": "Api_GetLatestMeasuresForGroup",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "inType",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasuresByTypeAndId": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measures by type and id\r\nID:s are: poolId, watertreatmentUnitId, outletWaterId or measureUnitId",
        "operationId": "Api_GetMeasuresByTypeAndId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Measures"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasuresByTypeAndIdForDay": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measures by type and Id for day\r\nID:s are: poolId, watertreatmentUnitId, outletWaterId or measureUnitId \r\nDay is date for certain day",
        "operationId": "Api_GetMeasuresByTypeAndIdForDay",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "targetType",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "name",
            "description": "",
            "type": "string"
          },
          {
            "in": "query",
            "name": "day",
            "description": "",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Measures"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureTypes": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure types",
        "operationId": "Api_GetMeasureTypes",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "measureType",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureTypeDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureTypeUnits": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure type units",
        "operationId": "Api_GetMeasureTypeUnits",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureTypeUnitDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureUnitByMac": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure unit by mac",
        "operationId": "Api_GetMeasureUnitByMac",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeasureUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureUnitByTechnicalEquipmentId": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure unit by technical equipment Id",
        "operationId": "Api_GetMeasureUnitByTechnicalEquipmentId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "technicalEquipmentId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeasureUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureUnits": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure units by type",
        "operationId": "Api_GetMeasureUnits",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureUnitDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMeasureUnitsByType": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get measure units by type",
        "operationId": "Api_GetMeasureUnitsByType",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "measureType",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureUnitDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetOutletWaterMeasures": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get outlet water measures",
        "operationId": "Api_GetOutletWaterMeasures",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Measures"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/GetMesureHistoryRows": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Get outlet water mesure history rows",
        "operationId": "Api_GetMesureHistoryRows",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "type",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MesureHistoryRowDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/RemoveMeasure": {
      "get": {
        "tags": [
          "Measure"
        ],
        "summary": "Remove measure",
        "operationId": "Api_RemoveMeasure",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/SaveMeasureTypes": {
      "post": {
        "tags": [
          "Measure"
        ],
        "summary": "Save measure types",
        "operationId": "Api_SaveMeasureTypes",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MeasureTypeDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Measure/SaveMeasureUnit": {
      "post": {
        "tags": [
          "Measure"
        ],
        "summary": "Save measure unit",
        "operationId": "Api_SaveMeasureUnit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/MeasureUnitDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeasureUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Medical/GetMedications": {
      "get": {
        "tags": [
          "Medical"
        ],
        "operationId": "Api_GetMedications",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "poolId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicationDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Medical/GetMedicines": {
      "get": {
        "tags": [
          "Medical"
        ],
        "operationId": "Api_GetMedicines",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicineDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Medical/SaveMedication": {
      "post": {
        "tags": [
          "Medical"
        ],
        "operationId": "Api_SaveMedication",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MedicationDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Medical/SaveMedicines": {
      "post": {
        "tags": [
          "Medical"
        ],
        "operationId": "Api_SaveMedicines",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MedicineDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/AddDeathsToPool": {
      "get": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_AddDeathsToPool",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "deaths",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/DeletePool": {
      "delete": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_DeletePool",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "poolId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/GetById": {
      "get": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_GetById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PoolDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/GetPools": {
      "get": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_GetPools",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PoolDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/MakeDailyWorks": {
      "get": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_MakeDailyWorks",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "apiKey",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/SavePool": {
      "post": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_SavePool",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/PoolDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PoolDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/SavePools": {
      "post": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_SavePools",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "description": "",
              "type": "array",
              "items": {
                "$ref": "#/definitions/PoolDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PoolDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Pool/SavePoolFeederUsage": {
      "get": {
        "tags": [
          "Pool"
        ],
        "summary": "",
        "operationId": "Api_SavePoolFeederUsage",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "feederUsageToday",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetFeedingGroupReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetFeedingGroupReport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReportFeedingReportGroupParameterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportFeedingGroupReportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetGrowthReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetGrowthReport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReportGrowthReportParameterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportGrowthReportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetMeasureReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetMeasureReport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReportMeasureReportParameterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportMeasureReportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetMeasureGroupReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetMeasureGroupReport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReportMeasureGroupReportParameterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportMeasureGroupReportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetOutletWaterMeasuresReport": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetOutletWaterMeasuresReport",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reportStartDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "reportEndDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "outletWaterId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportOutletWaterMeasureDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetPoolDailyReport": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetPoolDailyReport",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reportDate",
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PoolsHistoryDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetPoolsSummaryReport": {
      "post": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetPoolsSummaryReport",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ReportPoolsSummaryParameterDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportPoolsSummaryDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/Report/GetTargetReport": {
      "get": {
        "tags": [
          "Report"
        ],
        "operationId": "Api_GetTargetReport",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "reportStartDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "reportEndDate",
            "type": "string",
            "format": "date-time"
          },
          {
            "in": "query",
            "name": "targetReportType",
            "type": "string"
          },
          {
            "in": "query",
            "name": "targetId",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReportTargetReportDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/DeleteCamera": {
      "delete": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_DeleteCamera",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "technicalEquipmentId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/DeleteFeederControl": {
      "delete": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_DeleteFeederControl",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/DeleteMeasureUnit": {
      "delete": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_DeleteMeasureUnit",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "technicalEquipmentId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetCameraByMac": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetCameraByMac",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CameraDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetCameraByTechnicalEquipmentId": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetCameraByTechnicalEquipmentId",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "technicalEquipmentId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CameraDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetFeederControlById": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetFeederControlById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeederControlDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetFeederControlByMac": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetFeederControlByMac",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mac",
            "description": "",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeederControlDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetFeederControls": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetFeederControls",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FeederControlDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetRelaysForFeederController": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetRelaysForFeederController",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "feederControlId",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/GetTechnicalEquipmentById": {
      "get": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_GetTechnicalEquipmentById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TechnicalEquipmentsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/SaveCamera": {
      "post": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_SaveCamera",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/CameraDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CameraDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/SaveFeederControl": {
      "post": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_SaveFeederControl",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/FeederControlDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FeederControlDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/TechnicalEquipment/SaveTechnicalEquipment": {
      "post": {
        "tags": [
          "TechnicalEquipment"
        ],
        "summary": "",
        "operationId": "Api_SaveTechnicalEquipment",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "",
            "schema": {
              "$ref": "#/definitions/TechnicalEquipmentsDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TechnicalEquipmentsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/CreateNew": {
      "get": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "operationId": "Api_CreateNew",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WaterTreatmentUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/DeleteWaterTreatmentUnit": {
      "delete": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "summary": "",
        "operationId": "Api_DeleteWaterTreatmentUnit",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "description": "",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DeleteResponseViewModel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/GetWaterTreatmentUnitById": {
      "get": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "operationId": "Api_GetWaterTreatmentUnitById",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WaterTreatmentUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/GetWaterTreatmentUnits": {
      "get": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "operationId": "Api_GetWaterTreatmentUnits",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WaterTreatmentUnitDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/SaveWaterTreatmentUnit": {
      "post": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "operationId": "Api_SaveWaterTreatmentUnit",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/WaterTreatmentUnitDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WaterTreatmentUnitDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    },
    "/api/WaterTreatmentUnit/SaveWaterTreatmentUnits": {
      "post": {
        "tags": [
          "WaterTreatmentUnit"
        ],
        "operationId": "Api_SaveWaterTreatmentUnits",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WaterTreatmentUnitDto"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WaterTreatmentUnitDto"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found"
          },
          "500": {
            "description": "Unexpected server error. Please mention error GUID of the exception when contacting support."
          }
        }
      }
    }
  },
  "definitions": {
    "LocationDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "createsCheckPoints": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "waterTreatmentUnitIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FacilityDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocationDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "CompanyDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "facilitys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacilityDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "UserViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "comapanys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyDto"
          }
        },
        "currentCompanyName": {
          "type": "string"
        },
        "currentCompanyId": {
          "format": "int32",
          "type": "integer"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "needSetPassword": {
          "type": "boolean"
        }
      }
    },
    "CheckpointQuestionHistoryRowDto": {
      "type": "object",
      "properties": {
        "parentId": {
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "CheckpointQuestionDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "valueType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "affectsToDeaths": {
          "type": "boolean"
        },
        "affectsToMeasures": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "checkpointQuestionHistorys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointQuestionHistoryRowDto"
          }
        },
        "creationId": {
          "format": "int32",
          "type": "integer"
        },
        "checked": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "CheckpointDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointAreaId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinCheckpointArea": {
          "format": "double",
          "type": "number"
        },
        "yinCheckpointArea": {
          "format": "double",
          "type": "number"
        },
        "tooEarlyToCheck": {
          "type": "boolean"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "targetName": {
          "type": "string"
        },
        "checkFrequency": {
          "format": "int32",
          "type": "integer"
        },
        "lastCheckFailed": {
          "type": "boolean"
        },
        "lastCheckTime": {
          "format": "date-time",
          "type": "string"
        },
        "checkpointQuestions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointQuestionDto"
          }
        },
        "isChecked": {
          "type": "boolean"
        },
        "isNew": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "CheckpointAreaDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointId": {
          "format": "int32",
          "type": "integer"
        },
        "areaType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedingDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "isRunning": {
          "type": "boolean"
        },
        "markedAsRemoved": {
          "type": "boolean"
        },
        "feedAmountFromDailyPortion": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "NoteDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointAreaId": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "receipt": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FlowMeasuresDto": {
      "type": "object",
      "properties": {
        "flowRate": {
          "format": "double",
          "type": "number"
        },
        "flowVolumeDay": {
          "format": "double",
          "type": "number"
        },
        "flowVolumeWeek": {
          "format": "double",
          "type": "number"
        },
        "flowVolumeMonth": {
          "format": "double",
          "type": "number"
        },
        "flowVolumeYear": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "OutletWaterMeasuresDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true
        },
        "value": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "measureTime": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "measureTypeIsActive": {
          "type": "boolean"
        }
      }
    },
    "OverViewItemDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "uniqueId": {
          "type": "string"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "deathsToAdd": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "overViewType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "feederUsageToday": {
          "format": "int32",
          "type": "integer"
        },
        "flowMeasuresDto": {
          "$ref": "#/definitions/FlowMeasuresDto"
        },
        "outletWaterMeasuresDto": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutletWaterMeasuresDto"
          }
        },
        "childOverViewItemDtos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OverViewItemDto"
          }
        },
        "isNew": {
          "type": "boolean"
        },
        "showChilds": {
          "type": "boolean"
        },
        "dirty": {
          "type": "boolean"
        },
        "fishSchoolName": {
          "type": "string"
        },
        "fishDensity": {
          "format": "double",
          "type": "number"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "DeleteResponseViewModel": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlertViewModel": {
      "type": "object",
      "properties": {
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "noteId": {
          "format": "int32",
          "type": "integer"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "text": {
          "type": "string"
        },
        "receipt": {
          "type": "boolean"
        },
        "tagetId": {
          "format": "int32",
          "type": "integer"
        },
        "tagetType": {
          "type": "string"
        }
      }
    },
    "AlertsViewModel": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlertViewModel"
          }
        }
      }
    },
    "UserDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "userName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "passwordSet": {
          "type": "boolean"
        },
        "inRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inFacilitys": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "deleted": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "feedTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "pelletSize": {
          "format": "double",
          "type": "number"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedTypeDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "feedTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "pelletSize": {
          "format": "int32",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FishSchoolDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSpecieId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FishSpecieDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedStorageDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "location": {
          "$ref": "#/definitions/LocationDto"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedStorageSpaceDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "feedStorageId": {
          "format": "int32",
          "type": "integer"
        },
        "feedAmount": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "checkPointID": {
          "format": "int32",
          "type": "integer"
        },
        "feedLast": {
          "format": "int32",
          "type": "integer"
        },
        "noFeedUseInPools": {
          "type": "boolean"
        },
        "tooltipText": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "DataTreeViewModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "open": {
          "type": "boolean"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataTreeViewModel"
          }
        }
      }
    },
    "OutletWaterDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "nitrogen": {
          "format": "double",
          "type": "number"
        },
        "phosphorus": {
          "format": "double",
          "type": "number"
        },
        "solidMaterial": {
          "format": "double",
          "type": "number"
        },
        "conductivity": {
          "format": "double",
          "type": "number"
        },
        "bod": {
          "format": "double",
          "type": "number"
        },
        "cod": {
          "format": "double",
          "type": "number"
        },
        "ph": {
          "format": "double",
          "type": "number"
        },
        "o2": {
          "format": "double",
          "type": "number"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "SlaughteringsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "startBioMass": {
          "format": "double",
          "type": "number"
        },
        "live": {
          "format": "double",
          "type": "number"
        },
        "gutted": {
          "format": "double",
          "type": "number"
        },
        "guttedSuperior": {
          "format": "double",
          "type": "number"
        },
        "guttedPoor": {
          "format": "double",
          "type": "number"
        },
        "eggs": {
          "format": "double",
          "type": "number"
        },
        "byProduct": {
          "format": "double",
          "type": "number"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FishTransferDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "fromPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "toPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "fromBioMass": {
          "format": "double",
          "type": "number"
        },
        "fromAverageWeight": {
          "format": "double",
          "type": "number"
        },
        "fromAmount": {
          "format": "int32",
          "type": "integer"
        },
        "fromName": {
          "type": "string"
        },
        "toName": {
          "type": "string"
        },
        "fishTransferType": {
          "type": "string"
        },
        "fishTransferReasonCode": {
          "type": "string"
        },
        "isFrom": {
          "type": "boolean"
        },
        "transferDate": {
          "format": "date-time",
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        },
        "noValue": {
          "type": "boolean"
        },
        "measureTime": {
          "format": "date-time",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "isEstimate": {
          "type": "boolean"
        },
        "targetId": {
          "format": "int32",
          "type": "integer"
        },
        "measureType": {
          "type": "string"
        },
        "targetType": {
          "type": "string"
        },
        "targetName": {
          "type": "string"
        },
        "measureTypeIsActive": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasuresViewModel": {
      "type": "object",
      "properties": {
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureDto"
          }
        },
        "culture": {
          "type": "string"
        }
      }
    },
    "FeedTypes": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "feeds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feeds"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeederControlPools": {
      "type": "object",
      "properties": {
        "feederControlId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FeederControls": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "macAddress": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "relayAmount": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlState": {
          "type": "string"
        },
        "stateUpdateTime": {
          "format": "date-time",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Facilitys"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "isDirty": {
          "type": "boolean"
        },
        "feederControlPools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeederControlPools"
          }
        }
      }
    },
    "FishSpecies": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "fishSchools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FishSchools"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FishSchools": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSpecieId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "fishSpecie": {
          "$ref": "#/definitions/FishSpecies"
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Medications": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "medicineId": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "medicationCharge": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "medicationType": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "medicine": {
          "$ref": "#/definitions/Medicines"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Medicines": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "medicineTypeUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "medicineTypeUnit": {
          "$ref": "#/definitions/MeasureTypeUnits"
        },
        "medications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medications"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureTypeUnits": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "measureTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureTypes"
          }
        },
        "medicines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medicines"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "TechnicalEquipmentUnits": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "technicalEquipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TechnicalEquipments"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Cameras": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "objectDetection": {
          "type": "boolean"
        },
        "objectDetectionStartTime": {
          "type": "string"
        },
        "objectDetectionEndTime": {
          "type": "string"
        },
        "causeNotes": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "technicalEquipment": {
          "$ref": "#/definitions/TechnicalEquipments"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "TechnicalEquipments": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "currentStreamDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "macAddress": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "xinTechnicalEquipmentUnit": {
          "format": "double",
          "type": "number"
        },
        "yinTechnicalEquipmentUnit": {
          "format": "double",
          "type": "number"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "currentStreamDocument": {
          "$ref": "#/definitions/Documents"
        },
        "facility": {
          "$ref": "#/definitions/Facilitys"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "technicalEquipmentUnit": {
          "$ref": "#/definitions/TechnicalEquipmentUnits"
        },
        "cameras": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cameras"
          }
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "measureUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureUnits"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureUnits": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "measureType": {
          "$ref": "#/definitions/MeasureTypes"
        },
        "technicalEquipment": {
          "$ref": "#/definitions/TechnicalEquipments"
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureTypes": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "inLoadCalculation": {
          "type": "boolean"
        },
        "inHandMadeMeasures": {
          "type": "boolean"
        },
        "inOutletWaterMeasures": {
          "type": "boolean"
        },
        "inMeasureReport": {
          "type": "boolean"
        },
        "minValue": {
          "format": "double",
          "type": "number"
        },
        "maxValue": {
          "format": "double",
          "type": "number"
        },
        "poolMinValue": {
          "format": "double",
          "type": "number"
        },
        "poolMaxValue": {
          "format": "double",
          "type": "number"
        },
        "outletWaterMinValue": {
          "format": "double",
          "type": "number"
        },
        "outletWaterMaxValue": {
          "format": "double",
          "type": "number"
        },
        "purgingTankMinValue": {
          "format": "double",
          "type": "number"
        },
        "purgingTankMaxValue": {
          "format": "double",
          "type": "number"
        },
        "waterTreatmentUnitMinValue": {
          "format": "double",
          "type": "number"
        },
        "waterTreatmentUnitMaxValue": {
          "format": "double",
          "type": "number"
        },
        "locationMinValue": {
          "format": "double",
          "type": "number"
        },
        "locationMaxValue": {
          "format": "double",
          "type": "number"
        },
        "facilityMinValue": {
          "format": "double",
          "type": "number"
        },
        "facilityMaxValue": {
          "format": "double",
          "type": "number"
        },
        "technicalEquipmentMinValue": {
          "format": "double",
          "type": "number"
        },
        "technicalEquipmentMaxValue": {
          "format": "double",
          "type": "number"
        },
        "loadCalculationMinValue": {
          "format": "double",
          "type": "number"
        },
        "loadCalculationMaxValue": {
          "format": "double",
          "type": "number"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "poolSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "purgingTankSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "locationSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "facilitySeverity": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "loadCalculationSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "commonUse": {
          "type": "boolean"
        },
        "poolUse": {
          "type": "boolean"
        },
        "outletWaterUse": {
          "type": "boolean"
        },
        "purgingTankUse": {
          "type": "boolean"
        },
        "waterTreatmentUnitUse": {
          "type": "boolean"
        },
        "locationUse": {
          "type": "boolean"
        },
        "facilityUse": {
          "type": "boolean"
        },
        "technicalEquipmentUse": {
          "type": "boolean"
        },
        "loadCalculationUse": {
          "type": "boolean"
        },
        "basicData": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "measureTypeUnit": {
          "$ref": "#/definitions/MeasureTypeUnits"
        },
        "measureTypesInWaterTreatmentUnit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureTypesInWaterTreatmentUnit"
          }
        },
        "measureUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureUnits"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureTypesInWaterTreatmentUnit": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "minValue": {
          "format": "double",
          "type": "number"
        },
        "maxValue": {
          "format": "double",
          "type": "number"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "measureType": {
          "$ref": "#/definitions/MeasureTypes"
        },
        "waterTreatmentUnit": {
          "$ref": "#/definitions/WaterTreatmentUnits"
        }
      }
    },
    "WaterTreatmentUnits": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "alarmsActive": {
          "type": "boolean"
        },
        "dailyPortionInKilosMin": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilosMax": {
          "format": "double",
          "type": "number"
        },
        "bioMassMin": {
          "format": "double",
          "type": "number"
        },
        "bioMassMax": {
          "format": "double",
          "type": "number"
        },
        "temperatureMin": {
          "format": "double",
          "type": "number"
        },
        "temperatureMax": {
          "format": "double",
          "type": "number"
        },
        "oxygenMin": {
          "format": "double",
          "type": "number"
        },
        "oxygenMax": {
          "format": "double",
          "type": "number"
        },
        "phmin": {
          "format": "double",
          "type": "number"
        },
        "phmax": {
          "format": "double",
          "type": "number"
        },
        "nh4nmin": {
          "format": "double",
          "type": "number"
        },
        "nh4nmax": {
          "format": "double",
          "type": "number"
        },
        "no2nmin": {
          "format": "double",
          "type": "number"
        },
        "no2nmax": {
          "format": "double",
          "type": "number"
        },
        "no3nmin": {
          "format": "double",
          "type": "number"
        },
        "no3nmax": {
          "format": "double",
          "type": "number"
        },
        "po4pmin": {
          "format": "double",
          "type": "number"
        },
        "po4pmax": {
          "format": "double",
          "type": "number"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "measureTypesInWaterTreatmentUnit": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureTypesInWaterTreatmentUnit"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "isDirty": {
          "type": "boolean"
        },
        "checkPointID": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Checks": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointId": {
          "format": "int32",
          "type": "integer"
        },
        "checkerUserId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "setCheckpointToError": {
          "type": "boolean"
        },
        "checkedQuestions": {
          "type": "string"
        },
        "unCheckedQuestions": {
          "type": "string"
        },
        "state": {
          "format": "int32",
          "type": "integer"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "checkerUser": {
          "$ref": "#/definitions/Users"
        },
        "checkpoint": {
          "$ref": "#/definitions/Checkpoints"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Users": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "userName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "secondName": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "passwordSet": {
          "type": "boolean"
        },
        "password": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "alarms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alarms"
          }
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checks"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Alarms": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "receiptUserId": {
          "format": "int32",
          "type": "integer"
        },
        "alarmTypeCode": {
          "type": "string"
        },
        "alarmTime": {
          "format": "date-time",
          "type": "string"
        },
        "receipt": {
          "type": "boolean"
        },
        "receiptTime": {
          "format": "date-time",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "receiptUser": {
          "$ref": "#/definitions/Users"
        }
      }
    },
    "Feedings": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "feedAmountFromDailyPortion": {
          "format": "int32",
          "type": "integer"
        },
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "isDirty": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FishTransfer": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "fromPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "toPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "fromBioMass": {
          "format": "double",
          "type": "number"
        },
        "fromAverageWeight": {
          "format": "double",
          "type": "number"
        },
        "fromAmount": {
          "format": "int32",
          "type": "integer"
        },
        "fromName": {
          "type": "string"
        },
        "toName": {
          "type": "string"
        },
        "fishTransferType": {
          "type": "string"
        },
        "fishTransferReasonCode": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "fromPool": {
          "$ref": "#/definitions/Pools"
        },
        "toPool": {
          "$ref": "#/definitions/Pools"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "PoolEvents": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "eventTypeCode": {
          "type": "string"
        },
        "eventContent": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        }
      }
    },
    "PoolRequest": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "session": {
          "format": "uuid",
          "type": "string"
        },
        "poolRequestType": {
          "type": "string"
        },
        "poolRequestState": {
          "type": "string"
        },
        "parameter1": {
          "type": "string"
        },
        "parameter2": {
          "type": "string"
        },
        "parameter3": {
          "type": "string"
        },
        "parameter4": {
          "type": "string"
        },
        "parameter5": {
          "type": "string"
        },
        "result": {
          "format": "double",
          "type": "number"
        },
        "response": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        }
      }
    },
    "PoolsHistory": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolId": {
          "format": "int32",
          "type": "integer"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "lastFishAddedPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionFromMass": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilos": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilosLocked": {
          "type": "boolean"
        },
        "feedingSpeed": {
          "format": "double",
          "type": "number"
        },
        "feederUsageToday": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseInSeconds": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseInGrams": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseAmountInSerie": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseSeriePauseLenght": {
          "format": "int32",
          "type": "integer"
        },
        "feedConversionRate": {
          "format": "double",
          "type": "number"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "feedingStateCode": {
          "type": "string"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "deaths": {
          "format": "int32",
          "type": "integer"
        },
        "deathsToday": {
          "format": "int32",
          "type": "integer"
        },
        "deathsAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastFishAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "waterVolyme": {
          "format": "int32",
          "type": "integer"
        },
        "feederRelay": {
          "format": "int32",
          "type": "integer"
        },
        "fishSetUpDone": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedHistory": {
          "format": "date-time",
          "type": "string"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Slaughterings": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "startBioMass": {
          "format": "double",
          "type": "number"
        },
        "live": {
          "format": "double",
          "type": "number"
        },
        "gutted": {
          "format": "double",
          "type": "number"
        },
        "guttedSuperior": {
          "format": "double",
          "type": "number"
        },
        "guttedPoor": {
          "format": "double",
          "type": "number"
        },
        "eggs": {
          "format": "double",
          "type": "number"
        },
        "byProduct": {
          "format": "double",
          "type": "number"
        },
        "additionalInfo": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Pools": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolId": {
          "format": "int32",
          "type": "integer"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "lastFishAddedPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionFromMass": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilos": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilosLocked": {
          "type": "boolean"
        },
        "feedingSpeed": {
          "format": "double",
          "type": "number"
        },
        "feederUsageToday": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseInSeconds": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseAmountInSerie": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseSeriePauseLenght": {
          "format": "int32",
          "type": "integer"
        },
        "feedConversionRate": {
          "format": "double",
          "type": "number"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "feedingStateCode": {
          "type": "string"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "fishDensityMax": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "deaths": {
          "format": "int32",
          "type": "integer"
        },
        "deathsToday": {
          "format": "int32",
          "type": "integer"
        },
        "deathsAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastFishAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "waterVolyme": {
          "format": "int32",
          "type": "integer"
        },
        "feederRelay": {
          "format": "int32",
          "type": "integer"
        },
        "fishSetUpDone": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "feed": {
          "$ref": "#/definitions/Feeds"
        },
        "feederControl": {
          "$ref": "#/definitions/FeederControls"
        },
        "fishSchool": {
          "$ref": "#/definitions/FishSchools"
        },
        "lastFishAddedPool": {
          "$ref": "#/definitions/Pools"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "waterTreatmentUnit": {
          "$ref": "#/definitions/WaterTreatmentUnits"
        },
        "alarms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alarms"
          }
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "feedings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feedings"
          }
        },
        "fishTransferFromPool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FishTransfer"
          }
        },
        "fishTransferToPool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FishTransfer"
          }
        },
        "inverseLastFishAddedPool": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "medications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medications"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "poolEvents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolEvents"
          }
        },
        "poolRequest": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolRequest"
          }
        },
        "poolsHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolsHistory"
          }
        },
        "slaughterings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Slaughterings"
          }
        },
        "isDirty": {
          "type": "boolean"
        },
        "fishSchoolName": {
          "type": "string"
        },
        "waterTreatmentUnitName": {
          "type": "string"
        },
        "feedName": {
          "type": "string"
        },
        "currentOffFlavour": {
          "format": "int32",
          "type": "integer"
        },
        "currentOffFlavourDate": {
          "format": "date-time",
          "type": "string"
        },
        "fiveLatestOffFlavours": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "checkPointID": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageYesterDay": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "Feeds": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "feedTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "pelletSize": {
          "format": "double",
          "type": "number"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "feedType": {
          "$ref": "#/definitions/FeedTypes"
        },
        "feedStorageSpaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedStorageSpaces"
          }
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedStorages": {
      "type": "object",
      "properties": {
        "isDirty": {
          "type": "boolean"
        },
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "feedStorageSpaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedStorageSpaces"
          }
        }
      }
    },
    "FeedAmountHistorys": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "feedStorageSpaceId": {
          "format": "int32",
          "type": "integer"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "feedStorageSpace": {
          "$ref": "#/definitions/FeedStorageSpaces"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "FeedStorageSpaces": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "feedStorageId": {
          "format": "int32",
          "type": "integer"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "feedAmount": {
          "format": "int32",
          "type": "integer"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "feed": {
          "$ref": "#/definitions/Feeds"
        },
        "feedStorage": {
          "$ref": "#/definitions/FeedStorages"
        },
        "feedAmountHistorys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedAmountHistorys"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Notes": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterId": {
          "format": "int32",
          "type": "integer"
        },
        "measureUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointAreaId": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "feedStorageSpaceId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "receipt": {
          "type": "boolean"
        },
        "receiptTime": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "checkpointArea": {
          "$ref": "#/definitions/CheckpointAreas"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "facility": {
          "$ref": "#/definitions/Facilitys"
        },
        "feedStorageSpace": {
          "$ref": "#/definitions/FeedStorageSpaces"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "measureUnit": {
          "$ref": "#/definitions/MeasureUnits"
        },
        "outletWater": {
          "$ref": "#/definitions/OutletWaters"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "waterTreatmentUnit": {
          "$ref": "#/definitions/WaterTreatmentUnits"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "OutletWaters": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Checkpoints": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointAreaId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "xinCheckpointArea": {
          "format": "double",
          "type": "number"
        },
        "yinCheckpointArea": {
          "format": "double",
          "type": "number"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        },
        "state": {
          "format": "int32",
          "type": "integer"
        },
        "lastCheckFailed": {
          "type": "boolean"
        },
        "checkFrequency": {
          "format": "int32",
          "type": "integer"
        },
        "lastCheckTime": {
          "format": "date-time",
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "checkpointArea": {
          "$ref": "#/definitions/CheckpointAreas"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "outletWater": {
          "$ref": "#/definitions/OutletWaters"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "technicalEquipment": {
          "$ref": "#/definitions/TechnicalEquipments"
        },
        "waterTreatmentUnit": {
          "$ref": "#/definitions/WaterTreatmentUnits"
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checks"
          }
        },
        "isDirty": {
          "type": "boolean"
        },
        "tooEarlyToCheck": {
          "type": "boolean"
        },
        "targetName": {
          "type": "string"
        }
      }
    },
    "CheckpointAreas": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "checkpointId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Facilitys"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Documents": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "fileName": {
          "type": "string"
        },
        "documentType": {
          "type": "string"
        },
        "mimetype": {
          "type": "string"
        },
        "defaultDocument": {
          "type": "boolean"
        },
        "data": {
          "format": "byte",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "checkpointAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointAreas"
          }
        },
        "companys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Companys"
          }
        },
        "facilitys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facilitys"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locations"
          }
        },
        "outletWaters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutletWaters"
          }
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Pools"
          }
        },
        "technicalEquipmentUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TechnicalEquipmentUnits"
          }
        },
        "technicalEquipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TechnicalEquipments"
          }
        },
        "waterTreatmentUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WaterTreatmentUnits"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MedicineTypeUnits": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "code": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Companys": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "default": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "facilitys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facilitys"
          }
        },
        "feedTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedTypes"
          }
        },
        "feeds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feeds"
          }
        },
        "fishSchools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FishSchools"
          }
        },
        "fishSpecies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FishSpecies"
          }
        },
        "measureTypeUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureTypeUnits"
          }
        },
        "measureTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureTypes"
          }
        },
        "medicineTypeUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MedicineTypeUnits"
          }
        },
        "medicines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Medicines"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "slaughterings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Slaughterings"
          }
        }
      }
    },
    "Facilitys": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "default": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "company": {
          "$ref": "#/definitions/Companys"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "checkpointAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointAreas"
          }
        },
        "feederControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeederControls"
          }
        },
        "locations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Locations"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "technicalEquipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TechnicalEquipments"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Locations": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "createsCheckPoints": {
          "type": "boolean"
        },
        "default": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "facility": {
          "$ref": "#/definitions/Facilitys"
        },
        "layoutDocument": {
          "$ref": "#/definitions/Documents"
        },
        "checkpointAreas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CheckpointAreas"
          }
        },
        "checkpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Checkpoints"
          }
        },
        "feedStorages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeedStorages"
          }
        },
        "feederControls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeederControls"
          }
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Measures"
          }
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notes"
          }
        },
        "outletWaters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutletWaters"
          }
        },
        "technicalEquipments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TechnicalEquipments"
          }
        },
        "waterTreatmentUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WaterTreatmentUnits"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "Measures": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterId": {
          "format": "int32",
          "type": "integer"
        },
        "measureUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "format": "double",
          "type": "number"
        },
        "measureTime": {
          "format": "date-time",
          "type": "string"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/Locations"
        },
        "measureType": {
          "$ref": "#/definitions/MeasureTypes"
        },
        "measureUnit": {
          "$ref": "#/definitions/MeasureUnits"
        },
        "outletWater": {
          "$ref": "#/definitions/OutletWaters"
        },
        "pool": {
          "$ref": "#/definitions/Pools"
        },
        "waterTreatmentUnit": {
          "$ref": "#/definitions/WaterTreatmentUnits"
        },
        "isDirty": {
          "type": "boolean"
        },
        "measureTypeIsActive": {
          "type": "boolean"
        },
        "targetName": {
          "type": "string"
        }
      }
    },
    "MeasureTypeDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "translatedName": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "severity": {
          "format": "int32",
          "type": "integer"
        },
        "poolSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "outletWaterSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "purgingTankSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "locationSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "facilitySeverity": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "loadCalculationSeverity": {
          "format": "int32",
          "type": "integer"
        },
        "minValue": {
          "format": "double",
          "type": "number"
        },
        "maxValue": {
          "format": "double",
          "type": "number"
        },
        "poolMinValue": {
          "format": "double",
          "type": "number"
        },
        "poolMaxValue": {
          "format": "double",
          "type": "number"
        },
        "outletWaterMinValue": {
          "format": "double",
          "type": "number"
        },
        "outletWaterMaxValue": {
          "format": "double",
          "type": "number"
        },
        "purgingTankMinValue": {
          "format": "double",
          "type": "number"
        },
        "purgingTankMaxValue": {
          "format": "double",
          "type": "number"
        },
        "waterTreatmentUnitMinValue": {
          "format": "double",
          "type": "number"
        },
        "waterTreatmentUnitMaxValue": {
          "format": "double",
          "type": "number"
        },
        "locationMinValue": {
          "format": "double",
          "type": "number"
        },
        "locationMaxValue": {
          "format": "double",
          "type": "number"
        },
        "facilityMinValue": {
          "format": "double",
          "type": "number"
        },
        "facilityMaxValue": {
          "format": "double",
          "type": "number"
        },
        "technicalEquipmentMinValue": {
          "format": "double",
          "type": "number"
        },
        "technicalEquipmentMaxValue": {
          "format": "double",
          "type": "number"
        },
        "loadCalculationMinValue": {
          "format": "double",
          "type": "number"
        },
        "loadCalculationMaxValue": {
          "format": "double",
          "type": "number"
        },
        "commonUse": {
          "type": "boolean"
        },
        "poolUse": {
          "type": "boolean"
        },
        "outletWaterUse": {
          "type": "boolean"
        },
        "purgingTankUse": {
          "type": "boolean"
        },
        "waterTreatmentUnitUse": {
          "type": "boolean"
        },
        "locationUse": {
          "type": "boolean"
        },
        "facilityUse": {
          "type": "boolean"
        },
        "technicalEquipmentUse": {
          "type": "boolean"
        },
        "loadCalculationUse": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "additionalInfo": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "inLoadCalculation": {
          "type": "boolean"
        },
        "inHandMadeMeasures": {
          "type": "boolean"
        },
        "inOutletWaterMeasures": {
          "type": "boolean"
        },
        "inMeasureReport": {
          "type": "boolean"
        },
        "showSettings": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureTypeUnitDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "noDelete": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "TechnicalEquipmentsDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "currentStreamDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "macAddress": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "xinTechnicalEquipmentUnit": {
          "format": "double",
          "type": "number"
        },
        "yinTechnicalEquipmentUnit": {
          "format": "double",
          "type": "number"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "additionalInfo": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MeasureUnitDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "measureTypeId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "technicalEquipment": {
          "$ref": "#/definitions/TechnicalEquipmentsDto"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MesureHistoryRowDto": {
      "type": "object",
      "properties": {
        "day": {
          "format": "date-time",
          "type": "string"
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureDto"
          }
        }
      }
    },
    "MedicationDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "medicineId": {
          "format": "int32",
          "type": "integer"
        },
        "medicationCharge": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "medicationType": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "inPools": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "MedicineDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "companyId": {
          "format": "int32",
          "type": "integer"
        },
        "medicineTypeUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "additionalInfo": {
          "type": "string"
        },
        "basicData": {
          "type": "boolean"
        },
        "noDelete": {
          "type": "boolean"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "PoolDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitName": {
          "type": "string"
        },
        "lastFishAddedPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolId": {
          "format": "int32",
          "type": "integer"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "dailyPortionFromMass": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilos": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilosLocked": {
          "type": "boolean"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "fishDensityMax": {
          "format": "int32",
          "type": "integer"
        },
        "feedConversionRate": {
          "format": "double",
          "type": "number"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "feedingStateCode": {
          "type": "string"
        },
        "feedingPulseInSeconds": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseInGrams": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseAmountInSerie": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseSeriePauseLenght": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageToday": {
          "format": "int32",
          "type": "integer"
        },
        "feedingSpeed": {
          "format": "double",
          "type": "number"
        },
        "feederRelay": {
          "format": "int32",
          "type": "integer"
        },
        "temperature": {
          "format": "double",
          "type": "number"
        },
        "locationName": {
          "type": "string"
        },
        "currentOffFlavour": {
          "format": "int32",
          "type": "integer"
        },
        "currentOffFlavourDate": {
          "format": "date-time",
          "type": "string"
        },
        "fiveLatestOffFlavours": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureDto"
          }
        },
        "reCalculateFeedings": {
          "type": "boolean"
        },
        "deathsToAdd": {
          "format": "int32",
          "type": "integer"
        },
        "checkPointID": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageYesterDay": {
          "format": "int32",
          "type": "integer"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "deaths": {
          "format": "int32",
          "type": "integer"
        },
        "deathsToday": {
          "format": "int32",
          "type": "integer"
        },
        "deathsAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastFishAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "waterVolyme": {
          "format": "int32",
          "type": "integer"
        },
        "stopped": {
          "type": "boolean"
        },
        "lastFishAddedHourAndMinutes": {
          "type": "string"
        },
        "feedingsChanged": {
          "type": "boolean"
        },
        "temperatureSensorId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolName": {
          "type": "string"
        },
        "feedName": {
          "type": "string"
        },
        "currentFeeding": {
          "$ref": "#/definitions/FeedingDto"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportFeedingReportGroupParameterDto": {
      "type": "object",
      "properties": {
        "reportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "targetIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportFeedingRowDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "poolName": {
          "type": "string"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitName": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationName": {
          "type": "string"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "feederUsage": {
          "format": "double",
          "type": "number"
        },
        "feedingPercentFromBiomass": {
          "format": "double",
          "type": "number"
        },
        "feedName": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportFeedingGroupReportDto": {
      "type": "object",
      "properties": {
        "pvm": {
          "format": "date-time",
          "type": "string"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportFeedingRowDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportGrowthReportParameterDto": {
      "type": "object",
      "properties": {
        "pools": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportGrowthReportDto": {
      "type": "object",
      "properties": {
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "poolName": {
          "type": "string"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "locationName": {
          "type": "string"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitName": {
          "type": "string"
        },
        "specieId": {
          "format": "int32",
          "type": "integer"
        },
        "specieName": {
          "type": "string"
        },
        "fishSchoolId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolName": {
          "type": "string"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "bioMassStart": {
          "format": "double",
          "type": "number"
        },
        "bioMassEnd": {
          "format": "double",
          "type": "number"
        },
        "growth": {
          "format": "double",
          "type": "number"
        },
        "averageWeightStart": {
          "format": "double",
          "type": "number"
        },
        "averageWeightEnd": {
          "format": "double",
          "type": "number"
        },
        "sgr": {
          "format": "double",
          "type": "number"
        },
        "amountStart": {
          "format": "int32",
          "type": "integer"
        },
        "amountEnd": {
          "format": "int32",
          "type": "integer"
        },
        "deathsTotal": {
          "format": "int32",
          "type": "integer"
        },
        "deathsBiomass": {
          "format": "double",
          "type": "number"
        },
        "feederUsageAverage": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageMax": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageMin": {
          "format": "int32",
          "type": "integer"
        },
        "feederUsageTotal": {
          "format": "int32",
          "type": "integer"
        },
        "feedConversionRate": {
          "format": "double",
          "type": "number"
        },
        "fishDensityAverage": {
          "format": "double",
          "type": "number"
        },
        "fishDensityMax": {
          "format": "double",
          "type": "number"
        },
        "fishDensityMin": {
          "format": "double",
          "type": "number"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportMeasureReportParameterDto": {
      "type": "object",
      "properties": {
        "reportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "targetId": {
          "format": "int32",
          "type": "integer"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportMeasureReportDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "pvm": {
          "format": "date-time",
          "type": "string"
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportMeasureGroupReportParameterDto": {
      "type": "object",
      "properties": {
        "reportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "targetIDs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "measureName": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportMeasureGroupReportDto": {
      "type": "object",
      "properties": {
        "pvm": {
          "format": "date-time",
          "type": "string"
        },
        "measures": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MeasureDto"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportOutletWaterMeasureDto": {
      "type": "object",
      "properties": {
        "flowAmount": {
          "format": "double",
          "type": "number"
        },
        "day": {
          "format": "date-time",
          "type": "string"
        },
        "flowRate": {
          "format": "double",
          "type": "number"
        },
        "cumulativeFlowRate": {
          "format": "double",
          "type": "number"
        },
        "mesureHistoryRow": {
          "$ref": "#/definitions/MesureHistoryRowDto"
        },
        "estimateFlowAmount": {
          "type": "boolean"
        },
        "noMesureHistoryRow": {
          "type": "boolean",
          "readOnly": true
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "PoolsHistoryDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlId": {
          "format": "int32",
          "type": "integer"
        },
        "fishSchoolId": {
          "format": "int32",
          "type": "integer"
        },
        "feedId": {
          "format": "int32",
          "type": "integer"
        },
        "waterTreatmentUnitId": {
          "format": "int32",
          "type": "integer"
        },
        "lastFishAddedPoolId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "additionalInfo": {
          "type": "string"
        },
        "xinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "yinWaterTreatmentUnitMap": {
          "format": "double",
          "type": "number"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionFromMass": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilos": {
          "format": "double",
          "type": "number"
        },
        "dailyPortionInKilosLocked": {
          "type": "boolean"
        },
        "feedingSpeed": {
          "format": "double",
          "type": "number"
        },
        "feederUsageToday": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseInSeconds": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseInGrams": {
          "format": "double",
          "type": "number"
        },
        "feedingPulseAmountInSerie": {
          "format": "int32",
          "type": "integer"
        },
        "feedingPulseSeriePauseLenght": {
          "format": "int32",
          "type": "integer"
        },
        "feedConversionRate": {
          "format": "double",
          "type": "number"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "feedingStateCode": {
          "type": "string"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "deaths": {
          "format": "int32",
          "type": "integer"
        },
        "deathsToday": {
          "format": "int32",
          "type": "integer"
        },
        "deathsAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "lastFishAddedDate": {
          "format": "date-time",
          "type": "string"
        },
        "waterVolyme": {
          "format": "int32",
          "type": "integer"
        },
        "feederRelay": {
          "format": "int32",
          "type": "integer"
        },
        "fishSetUpDone": {
          "type": "boolean"
        },
        "stopped": {
          "type": "boolean"
        },
        "creationDate": {
          "format": "date-time",
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "lastModified": {
          "format": "date-time",
          "type": "string"
        },
        "modifier": {
          "type": "string"
        },
        "validUntil": {
          "format": "date-time",
          "type": "string"
        },
        "lastModifiedHistory": {
          "format": "date-time",
          "type": "string"
        },
        "fishSchoolName": {
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportPoolsSummaryParameterDto": {
      "type": "object",
      "properties": {
        "pools": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "reportStartDate": {
          "format": "date-time",
          "type": "string"
        },
        "reportEndDate": {
          "format": "date-time",
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportPoolsSummaryDto": {
      "type": "object",
      "properties": {
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "specieId": {
          "format": "int32",
          "type": "integer"
        },
        "startDate": {
          "format": "date-time",
          "type": "string"
        },
        "endDate": {
          "format": "date-time",
          "type": "string"
        },
        "amountStart": {
          "format": "int32",
          "type": "integer"
        },
        "amountEnd": {
          "format": "int32",
          "type": "integer"
        },
        "averageWeightStart": {
          "format": "double",
          "type": "number"
        },
        "averageWeightEnd": {
          "format": "double",
          "type": "number"
        },
        "bioMassStart": {
          "format": "double",
          "type": "number"
        },
        "bioMassEnd": {
          "format": "double",
          "type": "number"
        },
        "growth": {
          "format": "double",
          "type": "number"
        },
        "feederUsageTotal": {
          "format": "int32",
          "type": "integer"
        },
        "deathsTotal": {
          "format": "int32",
          "type": "integer"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "ReportTargetReportDto": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "amount": {
          "format": "int32",
          "type": "integer"
        },
        "averageWeight": {
          "format": "double",
          "type": "number"
        },
        "bioMass": {
          "format": "double",
          "type": "number"
        },
        "feederUsage": {
          "format": "int32",
          "type": "integer"
        },
        "deaths": {
          "format": "int32",
          "type": "integer"
        },
        "date": {
          "format": "date-time",
          "type": "string"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "CameraDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "technicalEquipmentId": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "objectDetection": {
          "type": "boolean"
        },
        "objectDetectionStartTime": {
          "type": "string"
        },
        "objectDetectionEndTime": {
          "type": "string"
        },
        "causeNotes": {
          "type": "boolean"
        },
        "technicalEquipment": {
          "$ref": "#/definitions/TechnicalEquipmentsDto"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "PoolInFeederControl": {
      "type": "object",
      "properties": {
        "poolId": {
          "format": "int32",
          "type": "integer"
        },
        "relay": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "FeederControlDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "facilityId": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "macAddress": {
          "type": "string"
        },
        "relayAmount": {
          "format": "int32",
          "type": "integer"
        },
        "feederControlState": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "poolsInFeederControl": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolInFeederControl"
          }
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    },
    "WaterTreatmentUnitDto": {
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "type": "integer"
        },
        "locationId": {
          "format": "int32",
          "type": "integer"
        },
        "layoutDocumentId": {
          "format": "int32",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "sortOrder": {
          "format": "int32",
          "type": "integer"
        },
        "type": {
          "type": "string"
        },
        "xinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "yinLocationMap": {
          "format": "double",
          "type": "number"
        },
        "xinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "yinFacilityMap": {
          "format": "double",
          "type": "number"
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PoolDto"
          }
        },
        "poolIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "checkPointID": {
          "format": "int32",
          "type": "integer"
        },
        "isDirty": {
          "type": "boolean"
        }
      }
    }
  }
}