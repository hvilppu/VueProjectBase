<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
	<AspNetCoreHostingModel>OutOfProcess</AspNetCoreHostingModel>
    <AspNetCoreModuleName>AspNetCoreModule</AspNetCoreModuleName>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>4.0.2</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <UserSecretsId>82218095-a2f2-45f3-84d5-57254d6ddf00</UserSecretsId>
	<DocumentationFile>project.Api.xml</DocumentationFile>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Autofac" Version="4.9.2" />
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="4.4.0" />
    <PackageReference Include="MediatR" Version="6.0.0" />
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="6.0.1" />
    <PackageReference Include="Microsoft.ApplicationInsights.AspNetCore" Version="2.5.1" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Protocols.NewtonsoftJson" Version="3.1.4" />
    <PackageReference Include="Microsoft.Extensions.Configuration.UserSecrets" Version="3.0.0" />
    <PackageReference Include="Microsoft.Extensions.ML" Version="1.5.0" />
    <PackageReference Include="Microsoft.Net.Compilers" Version="3.7.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.0.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.2.3" />
    <PackageReference Include="Scrutor" Version="3.0.2" />
    <PackageReference Include="Serilog.AspNetCore" Version="2.1.1" />
    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
  	<PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.0.0" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.0.0" />
	  <PackageReference Include="Microsoft.AspNetCore.SpaServices" Version="3.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.2" />
    <PackageReference Include="Serilog.Sinks.RollingFile" Version="3.3.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="5.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="5.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerGen" Version="5.1.0" />
    <PackageReference Include="Swashbuckle.AspNetCore.SwaggerUI" Version="5.1.0" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.7.0" />
    <PackageReference Include="VueCliMiddleware" Version="3.1.1" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.3" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="ClientApp\components\admin\**" />
    <Compile Remove="ClientApp\components\enrollment\**" />
    <Content Remove="ClientApp\components\admin\**" />
    <Content Remove="ClientApp\components\enrollment\**" />
    <EmbeddedResource Remove="ClientApp\components\admin\**" />
    <EmbeddedResource Remove="ClientApp\components\enrollment\**" />
    <None Remove="ClientApp\components\admin\**" />
    <None Remove="ClientApp\components\enrollment\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\assets\ChangeLog.txt" />
    <None Remove="ClientApp\enums.ts" />
    <None Remove="ClientApp\globals.ts" />
  </ItemGroup>

  <ItemGroup>
    <Resource Include="ClientApp\assets\ChangeLog.txt" />
    <Resource Include="ClientApp\assets\ChangeLogHistory.txt" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Project.Api\Project.Api.csproj" />
    <ProjectReference Include="..\Project.Common\Project.Common.csproj" />
    <ProjectReference Include="..\Project.Domain\Project.Domain.csproj" />
    <ProjectReference Include="..\Project.Services\Project.Services.csproj" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <WCFMetadata Include="Connected Services" />
  </ItemGroup>

  <ItemGroup>
    <None Update="ClientApp\dtos\BaseDto.ts">
      <CustomToolNamespace>..\Project.Domain\Dtos\BaseDto.cs</CustomToolNamespace>
    </None>
    <None Update="ClientApp\dtos\UserDto.ts">
      <CustomToolNamespace>..\project.Domain\Dtos\UserDto.cs</CustomToolNamespace>
    </None>  
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <!--<TypeScriptTarget>ES2020</TypeScriptTarget>
    <TypeScriptJSXEmit>None</TypeScriptJSXEmit>
    <TypeScriptModuleKind>ES6</TypeScriptModuleKind>
    <TypeScriptCompileOnSaveEnabled>False</TypeScriptCompileOnSaveEnabled>
    <TypeScriptNoImplicitAny>False</TypeScriptNoImplicitAny>
    <TypeScriptRemoveComments>False</TypeScriptRemoveComments>
    <TypeScriptOutFile />
    <TypeScriptOutDir />
    <TypeScriptGeneratesDeclarations>False</TypeScriptGeneratesDeclarations>
    <TypeScriptNoEmitOnError>True</TypeScriptNoEmitOnError>
    <TypeScriptSourceMap>False</TypeScriptSourceMap>
    <TypeScriptMapRoot />
    <TypeScriptSourceRoot />-->
  </PropertyGroup>

</Project>
